Q1. what is multithreading in python? hy is it used? Name the module used to handle threads in python.

    Python multithreading enables efficient utilization of the resources as the threads share the data space and memory. Multithreading in Python allows the concurrent and parallel occurrence of various tasks. 
    It causes a reduction in time consumption or response time, thereby increasing the performance.
    The threading module is a high-level implementation of multithreading used to deploy an application in Python. 
    To use multithreading, we need to import the threading module in Python Program. A start() method is used to initiate the activity of a thread.

Q2. why threading module used? write the use of the following functions

    Python multithreading enables efficient utilization of the resources as the threads share the data space and memory. Multithreading in Python allows the concurrent and parallel occurrence of various tasks. 
    It causes a reduction in time consumption or response time, thereby increasing the performance.
    1. activeCount()
        In Python, the method threading.activeCount() from the threading module is used to count the currently active or running threads.
        threading.active_count()
        
    2. currentThread()
        current_thread() is an inbuilt method of the threading module in Python. It is used to return the current Thread object, which corresponds to the caller's thread of control.
    3. enumerate()
        enumerate is a built-in function in python that allows you to keep track of the number of iterations (loops) in a loop. This enumerate object contains a count (from the start, which always defaults to 0) and a value obtained from iterating over the iterable object.
    
    
    
Q3. Explain the following functions
    1. run()
    2. start()
    3. join()
    4. isAlive()
    
    
    
Q4. write a python program to create two threads. Thread one must print the list of squares and thread two must print the list of cubes



Q5. State advantages and disadvantages of multithreading



Q6. Explain deadlocks and race conditions.


